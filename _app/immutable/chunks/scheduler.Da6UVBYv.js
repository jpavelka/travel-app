function k(){}function w(t,n){for(const e in n)t[e]=n[e];return t}function A(t){return!!t&&(typeof t=="object"||typeof t=="function")&&typeof t.then=="function"}function j(t){return t()}function D(){return Object.create(null)}function E(t){t.forEach(j)}function F(t){return typeof t=="function"}function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let f;function S(t,n){return t===n?!0:(f||(f=document.createElement("a")),f.href=n,t===f.href)}function U(t){return Object.keys(t).length===0}function q(t,...n){if(t==null){for(const o of n)o(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function B(t,n,e){t.$$.on_destroy.push(q(n,e))}function C(t,n,e,o){if(t){const r=m(t,n,e,o);return t[0](r)}}function m(t,n,e,o){return t[1]&&o?w(e.ctx.slice(),t[1](o(n))):e.ctx}function G(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const a=[],_=Math.max(n.dirty.length,r.length);for(let s=0;s<_;s+=1)a[s]=n.dirty[s]|r[s];return a}return n.dirty|r}return n.dirty}function H(t,n,e,o,r,a){if(r){const _=m(n,e,o,a);t.p(_,r)}}function I(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}let l;function h(t){l=t}function b(){if(!l)throw new Error("Function called outside component initialization");return l}function J(t){b().$$.on_mount.push(t)}function K(t){b().$$.after_update.push(t)}function L(t){b().$$.on_destroy.push(t)}const i=[],g=[];let u=[];const y=[],x=Promise.resolve();let p=!1;function O(){p||(p=!0,x.then(M))}function N(){return O(),x}function z(t){u.push(t)}const d=new Set;let c=0;function M(){if(c!==0)return;const t=l;do{try{for(;c<i.length;){const n=i[c];c++,h(n),v(n.$$)}}catch(n){throw i.length=0,c=0,n}for(h(null),i.length=0,c=0;g.length;)g.pop()();for(let n=0;n<u.length;n+=1){const e=u[n];d.has(e)||(d.add(e),e())}u.length=0}while(i.length);for(;y.length;)y.pop()();p=!1,d.clear(),h(t)}function v(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(z)}}function Q(t){const n=[],e=[];u.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),u=n}export{S as A,G as a,B as b,C as c,K as d,g as e,D as f,I as g,M as h,F as i,U as j,z as k,Q as l,l as m,k as n,J as o,h as p,j as q,E as r,P as s,N as t,H as u,i as v,O as w,A as x,b as y,L as z};
